<?php

/**
 * @file
 * Implements a field for displaying ESDH documents directly.
 */

define('ACADRE_CM_ACCESS_OPEN_DOCUMENT', '3');

/* Field information hooks */

/**
 * Implements hook_field_info().
 */
function os2web_doc_field_field_info() {
  return array(
    'doc_ident' => array(
      'label' => t('ESDH Document'),
      'description' => 'Dokument-id skal være på formen nummer/år eller nummer-år. Flere dokumenter skal være adskildt af , (komma).',
      'default_widget' => 'doc_ident_widget',
      'default_formatter' => 'doc_ident_formatter',
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function os2web_doc_field_field_formatter_info() {
  return array(
    'doc_ident_formatter' => array(
      'label' => t('ESDH Document includer'),
      'field types' => array('doc_ident'),
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function os2web_doc_field_field_widget_info() {
  return array(
    'doc_ident_widget' => array(
      'label' => t('Document Identifier'),
      'field types' => array('doc_ident'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function os2web_doc_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $field_name = $field['field_name'];
  $field_type = $field['type'];
  $default = '';
  if (isset($form_state['node']->{$field_name}[$langcode][$delta][$field_type])) {
    $default = ($form_state['node']->{$field_name}[$langcode][$delta][$field_type])? : 0;
  }
  switch ($instance['widget']['type']) {
    case 'doc_ident_widget':
      $element['doc_ident'] = array(
        '#type' => 'textfield',
        '#title' => check_plain($element['#title']),
        '#description' => check_plain($element['#description']),
        '#default_value' => $default,
        '#required' => $element['#required'],
        '#weight' => isset($element['#weight']) ? $element['#weight'] : 0,
        '#delta' => $delta,
      );
      break;
  }
  return $element;
}

/**
 * Implments hook_field_is_empty().
 */
function os2web_doc_field_field_is_empty($item, $field) {
  if (empty($item['doc_ident'])) {
    return TRUE;
  }
}

/**
 * Implements hook_field_validate().
 */
function os2web_doc_field_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
  foreach ($items as $delta => $item) {
    $docids = explode(',', $item['doc_ident']);
    foreach ($docids as $docid) {
      $docid = trim($docid);
      // Adopt this for further testing.
      $valid = preg_match('/^\d{1,20}[-,\/]\d{2}$/', $docid);
      if (!$valid && ($docid != '')) {
        $errors[$field['field_name']][$langcode][$delta][] = array(
          'error' => 'Ugyldig fremstilling af dokument-id. Dokument-id skal være på formen nummer/år eller nummer-år. Flere dokumenter skal være adskildt af , (komma).',
          'message' => t('%name: illegal value.', array('%name' => $instance['label'])),
        );
      }
    }
  }
}

/**
 * Implements hook_field_formatter_view().
 */
function os2web_doc_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'doc_ident_formatter':
      foreach ($items as $delta => $item) {
        if ($item['doc_ident']) {
          $docs = array();
          $ids = explode(',', $item['doc_ident']);
          foreach ($ids as $id) {
            $docs[] = trim($id);
          }
          $element[$delta]['#markup'] = '<div class="documenttable">' . theme('esdh_document', array('id' => $docs)) . '</div>';
        }
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_theme().
 */
function os2web_doc_field_theme() {
  return array(
    'esdh_document' => array(
      'variables' => array('id' => FALSE),
    ),
  );
}

/**
 * Implements theme_IDENTIFIER().
 */
function theme_esdh_document($vars) {
  // Check for correct api and required functions are implemented.
  if (!os2web_esdh_provider_has_api('cm')) {
    drupal_set_message('Error in document lookup API. Check status.', 'error');
    return '';
  }
  $id = $vars['id'];
  drupal_load('module', 'os2web_case_field');
  if (!is_array($id)) {
    $id = array($id);
  }
  $html = '';
  $rows = array();
  foreach ($id as $docid) {
    $doc = os2web_esdh_provider_invoke('cm', 'get_document', $docid);
    if (_os2web_doc_field_doc_access($docid)) {
      // Only show public documents.
      if (($doc !== FALSE) && _os2web_case_field_case_access($doc['case_reference'])) {
        $rows[] = array(
          l($doc['title'], os2web_esdh_provider_invoke('cm', 'get_document_file', $docid)) . '<span class="documentdate">' . format_date(strtotime($doc['last_update']), 'custom', 'd/m/Y') . '</span>',
        );
      }
    }
  }
  if (count($rows) == 0) {
    if ($vars['iscase']) {
      $html .= '<p>' . t('This case contains no public documents.') . '</p>';
    }
    return $html;
  }
  $html .= theme('table', array('rows' => $rows));
  return $html;
}

/**
 * Checks access conditions for a document.
 *
 * @param int $docid
 *   Document id
 *
 * @return boolean
 *   True on access granted
 */
function _os2web_doc_field_doc_access($docid) {
  $doc = os2web_esdh_provider_invoke('cm', 'get_document', $docid);
  $access_grant = array(
    'accesscode' => 'KK',
    'publication' => ACADRE_CM_ACCESS_OPEN_DOCUMENT,
    'lockstatus' => TRUE,
  );
  $access = array(
    'accesscode' => $doc['access_code'],
    'publication' => $doc['publication_indicator'],
    'lockstatus' => $doc['lock_status'],
  );
  return _os2web_doc_field_array_compare($access, $access_grant);
}

/**
 * Helper function that compares two arrays.
 * @access protected
 *
 * @param array $a1
 *   First array
 * @param array $a2
 *   Second array
 *
 * @return boolean
 *   True if all keys in $a1 is equivilent in $a2
 */
function _os2web_doc_field_array_compare(array $a1, array $a2) {
  $result = TRUE;
  foreach ($a1 as $key => $value) {
    if (isset($a2[$key]) && $a2[$key] === $value) {
      $result = $result && TRUE;
    }
    else {
      $result = $result && FALSE;
    }
  }
  return $result;
}
